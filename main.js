(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>f});var r=t(537),a=t.n(r),o=t(645),i=t.n(o),A=t(667),c=t.n(A),s=new URL(t(656),t.b),d=new URL(t(62),t.b),l=i()(a()),p=c()(s),m=c()(d);l.push([n.id,"@font-face {\n    font-family: 'Roboto';\n    src: url("+p+") format('ttf');\n    font-weight: 400;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url("+m+") format('ttf');\n    font-weight: 700;\n    font-style: normal;\n}\n\n:root {\n    --primary-dark: #48484a;\n    --primary-light: #ffffff;\n    --accent-main: #eb6e4c;\n    --accent-secondary: #78cbbf;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    outline: none;\n}\n\nbody {\n    min-height: 100vh;\n    font-family: 'Roboto', sans-serif;\n    color: var(--primary-dark);\n    background-color: var(--primary-light);\n    display: flex;\n    flex-direction: column;\n}\n\nheader {\n    padding: 2rem 5vw;\n    background-color: var(--primary-dark);\n    display: grid;\n    grid-template-columns: 3fr 0.75fr 0.25fr;\n    align-items: center;\n}\n\n.logo {\n    font-size: 1.25rem;\n    color: var(--primary-light);\n    display: flex;\n    flex-direction: row-reverse;\n    justify-content: flex-end;\n    align-items: center;\n    gap: 0.75rem;\n}\n\n.search {\n    margin-right: 2rem;\n    display: flex;\n    align-items: center;\n    gap: 0.75rem;\n}\n\n.searchbar {\n    height: 2rem;\n    width: 15rem;\n    padding-inline: 0.5rem;\n    border: 1px solid var(--primary-dark);\n    border-radius: 5px;\n    background-color: var(--primary-light);\n}\n\n.icon {\n    cursor: pointer;\n    transition: 0.3s;\n}\n\n.icon:hover {\n    transform: scale(1.1);\n}\n\n.unit {\n    appearance: none;\n    cursor: pointer;\n    width: 75px;\n    margin: 0;\n    padding-left: 50px;\n    border-radius: 22px;\n    background: radial-gradient(circle 12px, var(--primary-light) 100%, transparent calc(100% + 1px)) var(--accent-main) -16px;\n    transition: 0.3s ease-in-out;\n}\n\n.unit:before {\n    content: '째F';\n    font: 700 15px/35px sans-serif;\n    color: var(--primary-light)\n}\n\n:checked {\n    padding-left: 10px;\n    background-color: var(--accent-secondary);\n    background-position: 16px;\n}\n\n:checked::before {\n    content: '째C';\n}\n\nmain {\n    max-width: fit-content;\n    padding: 5rem;\n    flex: 1;\n}\n\n@media only screen and (max-width: 992px) {\n    main {\n        display: grid;\n        grid-template-rows: 1fr 1fr;\n        justify-content: center;\n        gap: 5rem;\n    }\n\n    #info { \n        display: flex;\n        gap: 22vw;\n    }\n}\n\n@media only screen and (min-width: 993px) {\n    main {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        justify-content: center;\n        gap: 10rem;\n    }\n\n    #info { \n        display: flex;\n        gap: 11vw;\n    }\n}\n\n.weather {\n    display: grid;\n    grid-template-rows: 1fr 3fr 1fr;\n    grid-template-columns: 1fr 2fr 1fr;\n    column-gap: 5rem;\n    justify-items: center;\n    align-items: center;\n    grid-template-areas: \n    \"location location location\"\n    \"condition weather temp\"\n    \"info info info\";\n}\n\n#location { \n    justify-self: left;\n    grid-area: location; \n}\n\n#condition { grid-area: condition; }\n#temp { grid-area: temp; }\n#weather { grid-area: weather; }\n\n#info { \n    padding: 2rem 4rem;\n    border-radius: 10px;\n    font-weight: 700;\n    color: var(--primary-light);\n    background-color: var(--accent-main);\n    grid-area: info;\n}\n\n#info div {\n    width: 55px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 1rem;\n}\n\n.forecast {\n    table-layout: fixed;\n    border-collapse: collapse;\n    box-shadow: 1px 1px 5px var(--primary-dark);\n}\n\n.forecast caption {\n    margin: 1rem 1rem;\n    font-size: 2rem;\n    font-weight: 700;\n    text-align: left;\n}\n\n.forecast thead th {\n    padding: 1.5rem 0;\n    font-weight: 700;\n    background-color: var(--accent-secondary);\n}\n\n.forecast thead th:first-of-type {\n    border-top-left-radius: 5px;\n}\n\n.forecast thead th:last-of-type {\n    border-top-right-radius: 5px;\n}\n\n.forecast tbody tr {\n    border-bottom: 1px solid var(--primary-dark);\n    text-align: center;\n}\n\n.forecast tbody tr:last-of-type {\n    border-bottom: 5px solid var(--accent-secondary);\n}\n\nfooter {\n    margin-top: auto;\n    padding: 1rem;\n    color: var(--primary-light);\n    background-color: var(--primary-dark);\n    display: flex;\n    justify-content: center;\n    gap: 2rem;\n}\n\n.profile {\n    cursor: pointer;\n    transition: 0.25s;\n}\n\n.profile:hover {\n    transform: scale(1.2);\n}\n\n#overlay {\n    width: 100vw;\n    height: 100vh;\n    z-index: 1;\n    position: absolute;\n    background-color: #48484aCC;\n    visibility: hidden;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#overlay.display {\n    visibility: visible;\n}\n\n.loading {\n    width: 5rem;\n    height: 5rem;\n    border: 5px solid var(--primary-light);\n    border-top: 6px solid var(--accent-main);\n    border-radius: 100%;\n    animation: spin 1s infinite linear;\n}\n\n@keyframes spin {\n    from {\n        transform: rotate(0deg);\n    } to {\n        transform: rotate(360deg);\n    }\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["@font-face {\n    font-family: 'Roboto';\n    src: url('./font/Roboto-Regular.ttf') format('ttf');\n    font-weight: 400;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('./font/Roboto-Bold.ttf') format('ttf');\n    font-weight: 700;\n    font-style: normal;\n}\n\n:root {\n    --primary-dark: #48484a;\n    --primary-light: #ffffff;\n    --accent-main: #eb6e4c;\n    --accent-secondary: #78cbbf;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    outline: none;\n}\n\nbody {\n    min-height: 100vh;\n    font-family: 'Roboto', sans-serif;\n    color: var(--primary-dark);\n    background-color: var(--primary-light);\n    display: flex;\n    flex-direction: column;\n}\n\nheader {\n    padding: 2rem 5vw;\n    background-color: var(--primary-dark);\n    display: grid;\n    grid-template-columns: 3fr 0.75fr 0.25fr;\n    align-items: center;\n}\n\n.logo {\n    font-size: 1.25rem;\n    color: var(--primary-light);\n    display: flex;\n    flex-direction: row-reverse;\n    justify-content: flex-end;\n    align-items: center;\n    gap: 0.75rem;\n}\n\n.search {\n    margin-right: 2rem;\n    display: flex;\n    align-items: center;\n    gap: 0.75rem;\n}\n\n.searchbar {\n    height: 2rem;\n    width: 15rem;\n    padding-inline: 0.5rem;\n    border: 1px solid var(--primary-dark);\n    border-radius: 5px;\n    background-color: var(--primary-light);\n}\n\n.icon {\n    cursor: pointer;\n    transition: 0.3s;\n}\n\n.icon:hover {\n    transform: scale(1.1);\n}\n\n.unit {\n    appearance: none;\n    cursor: pointer;\n    width: 75px;\n    margin: 0;\n    padding-left: 50px;\n    border-radius: 22px;\n    background: radial-gradient(circle 12px, var(--primary-light) 100%, transparent calc(100% + 1px)) var(--accent-main) -16px;\n    transition: 0.3s ease-in-out;\n}\n\n.unit:before {\n    content: '째F';\n    font: 700 15px/35px sans-serif;\n    color: var(--primary-light)\n}\n\n:checked {\n    padding-left: 10px;\n    background-color: var(--accent-secondary);\n    background-position: 16px;\n}\n\n:checked::before {\n    content: '째C';\n}\n\nmain {\n    max-width: fit-content;\n    padding: 5rem;\n    flex: 1;\n}\n\n@media only screen and (max-width: 992px) {\n    main {\n        display: grid;\n        grid-template-rows: 1fr 1fr;\n        justify-content: center;\n        gap: 5rem;\n    }\n\n    #info { \n        display: flex;\n        gap: 22vw;\n    }\n}\n\n@media only screen and (min-width: 993px) {\n    main {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        justify-content: center;\n        gap: 10rem;\n    }\n\n    #info { \n        display: flex;\n        gap: 11vw;\n    }\n}\n\n.weather {\n    display: grid;\n    grid-template-rows: 1fr 3fr 1fr;\n    grid-template-columns: 1fr 2fr 1fr;\n    column-gap: 5rem;\n    justify-items: center;\n    align-items: center;\n    grid-template-areas: \n    \"location location location\"\n    \"condition weather temp\"\n    \"info info info\";\n}\n\n#location { \n    justify-self: left;\n    grid-area: location; \n}\n\n#condition { grid-area: condition; }\n#temp { grid-area: temp; }\n#weather { grid-area: weather; }\n\n#info { \n    padding: 2rem 4rem;\n    border-radius: 10px;\n    font-weight: 700;\n    color: var(--primary-light);\n    background-color: var(--accent-main);\n    grid-area: info;\n}\n\n#info div {\n    width: 55px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 1rem;\n}\n\n.forecast {\n    table-layout: fixed;\n    border-collapse: collapse;\n    box-shadow: 1px 1px 5px var(--primary-dark);\n}\n\n.forecast caption {\n    margin: 1rem 1rem;\n    font-size: 2rem;\n    font-weight: 700;\n    text-align: left;\n}\n\n.forecast thead th {\n    padding: 1.5rem 0;\n    font-weight: 700;\n    background-color: var(--accent-secondary);\n}\n\n.forecast thead th:first-of-type {\n    border-top-left-radius: 5px;\n}\n\n.forecast thead th:last-of-type {\n    border-top-right-radius: 5px;\n}\n\n.forecast tbody tr {\n    border-bottom: 1px solid var(--primary-dark);\n    text-align: center;\n}\n\n.forecast tbody tr:last-of-type {\n    border-bottom: 5px solid var(--accent-secondary);\n}\n\nfooter {\n    margin-top: auto;\n    padding: 1rem;\n    color: var(--primary-light);\n    background-color: var(--primary-dark);\n    display: flex;\n    justify-content: center;\n    gap: 2rem;\n}\n\n.profile {\n    cursor: pointer;\n    transition: 0.25s;\n}\n\n.profile:hover {\n    transform: scale(1.2);\n}\n\n#overlay {\n    width: 100vw;\n    height: 100vh;\n    z-index: 1;\n    position: absolute;\n    background-color: #48484aCC;\n    visibility: hidden;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#overlay.display {\n    visibility: visible;\n}\n\n.loading {\n    width: 5rem;\n    height: 5rem;\n    border: 5px solid var(--primary-light);\n    border-top: 6px solid var(--accent-main);\n    border-radius: 100%;\n    animation: spin 1s infinite linear;\n}\n\n@keyframes spin {\n    from {\n        transform: rotate(0deg);\n    } to {\n        transform: rotate(360deg);\n    }\n}"],sourceRoot:""}]);const f=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);r&&i[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},i=[],A=0;A<n.length;A++){var c=n[A],s=r.base?c[0]+r.base:c[0],d=o[s]||0,l="".concat(s," ").concat(d);o[s]=d+1;var p=t(l),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var f=a(m,r);r.byIndex=A,e.splice(A,0,{identifier:l,updater:f,references:1})}i.push(l)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var A=t(o[i]);e[A].references--}for(var c=r(n,a),s=0;s<o.length;s++){var d=t(o[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}o=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},62:(n,e,t)=>{n.exports=t.p+"f80816a5455d171f948d.ttf"},656:(n,e,t)=>{n.exports=t.p+"fc2b5060f7accec5cf74.ttf"}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),a=t.n(r),o=t(569),i=t.n(o),A=t(565),c=t.n(A),s=t(216),d=t.n(s),l=t(589),p=t.n(l),m=t(426),f={};f.styleTagTransform=p(),f.setAttributes=c(),f.insert=i().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=d(),e()(m.Z,f),m.Z&&m.Z.locals&&m.Z.locals;const u=t.p+"2c0b3d17597d506011d6.png",C=t.p+"67cc6ed672e8180b52cc.png",g=t.p+"4df2af614cfe6243d281.png";function B(n,e){if(e.length<n)throw new TypeError(n+" argument"+(n>1?"s":"")+" required, but only "+e.length+" present")}function h(n){B(1,arguments);var e=Object.prototype.toString.call(n);return n instanceof Date||"object"==typeof n&&"[object Date]"===e?new Date(n.getTime()):"number"==typeof n||"[object Number]"===e?new Date(n):("string"!=typeof n&&"[object String]"!==e||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function y(n){if(null===n||!0===n||!1===n)return NaN;var e=Number(n);return isNaN(e)?e:e<0?Math.ceil(e):Math.floor(e)}const I=async n=>{try{const e=await fetch(`http://api.openweathermap.org/geo/1.0/zip?zip=${n}&appid=c52825b8eee6d7b7f39532505506474f`,{mode:"cors"});if(!e.ok)throw new Error(`Zip code (${n}) can not be found`);const t=await e.json(),r=t.name;return{name:r,lat:t.lat,lon:t.lon,zip:n}}catch(n){return alert(n),null}},b=async n=>{const e=document.getElementById("location");e.textContent=`Current weather in ${n.name}`,e.setAttribute("zip",n.zip)},v=async(n,e)=>{const t=await(async(n,e,t)=>{try{const r=await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${n}&lon=${e}&appid=c52825b8eee6d7b7f39532505506474f&units=${t}`,{mode:"cors"});if(!r.ok)throw new Error("Cannot retrieve weather for this location");const a=await r.json(),o=a.weather[0].main,i=`https://openweathermap.org/img/wn/${a.weather[0].icon}@4x.png`,A=`${Math.round(a.main.temp)}째`,c=`${Math.round(a.main.feels_like)}째`,s=`${a.main.humidity}%`,d="imperial"===t?"mph":"km/h";return{condition:o,icon:i,temp:A,feel:c,humidity:s,wind:`${Math.round(a.wind.speed)} ${d}`}}catch(n){return alert(n),null}})(n.lat,n.lon,e),r=document.getElementById("weather");r.innerHTML="";const a=new Image(300,300);a.src=t.icon,r.appendChild(a),document.getElementById("condition").textContent=t.condition,document.getElementById("temp").textContent=t.temp,document.getElementById("feel").textContent=t.feel,document.getElementById("humidity").textContent=t.humidity,document.getElementById("wind").textContent=t.wind},w=async(n,e)=>{const t=await(async(n,e,t)=>{try{const r=await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${n}&lon=${e}&appid=c52825b8eee6d7b7f39532505506474f&units=${t}`,{mode:"cors"});if(!r.ok)throw new Error("Cannot retrieve forecast for this location");const a=await r.json(),o=[];return a.list.forEach((n=>{if(n.dt_txt.includes("12:00:00")){const e=((n,e,t,r)=>({weekday:n=(n=>{switch(n){case 0:return"Sunday";case 1:return"Monday";case 2:return"Tuesday";case 3:return"Wednesday";case 4:return"Thursday";case 5:return"Friday";case 6:return"Saturday"}})(function(n){return B(1,arguments),h(n).getDay()}(function(n){return B(1,arguments),h(1e3*y(n))}(n))),icon:e=`https://openweathermap.org/img/wn/${e}@4x.png`,pop:t=`${Math.round(100*t)}%`,temp:r=`${Math.round(r)}째`}))(n.dt,n.weather[0].icon,n.pop,n.main.temp);o.push(e)}})),o}catch(n){return alert(n),null}})(n.lat,n.lon,e),r=document.getElementById("forecast");r.innerHTML="",t.forEach((n=>{const e=document.createElement("tr");r.appendChild(e);const t=document.createElement("th");t.scope="row",t.textContent=n.weekday,e.appendChild(t);const a=new Image(90,90);a.src=n.icon,e.appendChild(a);const o=document.createElement("td");o.textContent=n.pop,e.appendChild(o);const i=document.createElement("td");i.textContent=n.temp,e.appendChild(i)}))};window.onload=async()=>{(()=>{const n=document.getElementById("logo"),e=new Image(60,60);e.src=C,n.appendChild(e);const t=document.getElementById("searchIcon"),r=new Image(35,35);r.src=g,t.appendChild(r);const a=document.getElementById("profile"),o=new Image(25,25);o.src=u,a.appendChild(o)})(),(()=>{const n=document.getElementById("searchbar"),e=document.getElementById("searchIcon"),t=document.getElementById("unit");e.addEventListener("click",(async()=>{(()=>{const n=document.getElementById("overlay");n.classList.add("display"),setTimeout((()=>{n.classList.remove("display")}),1e3)})();const e=n.value,r=await I(e),a=t.checked?"metric":"imperial";b(r),v(r,a),w(r,a)})),t.addEventListener("change",(async()=>{const n=t.checked?"metric":"imperial",e=document.getElementById("location").getAttribute("zip"),r=await I(e);b(r),v(r,n),w(r,n)}))})();const n=await I("10001"),e="imperial";b(n),v(n,e),w(n,e)}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,